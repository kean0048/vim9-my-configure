"-- Cscope setting --
" 添加cscope数据库到当前vim
if has("cscope")
    set csprg=~/bin/cscope " 指定用来执行cscope的命令
    set csto=0 " 设置cstag命令查找次序：0先找cscope数据库再找标签文件；1先找标签文件再找cscope数据库
    set cst " 同时搜索cscope数据库和标签文件
    set cscopequickfix=s-,c-,d-,i-,t-,e- " 使用QuickFix窗口来显示cscope查找结果
    set nocsverb
    if filereadable("cscope.out") " 若当前目录下存在cscope数据库，添加该数据库到vim
        cs add cscope.out
        "elseif $CSCOPE_DB != "" " 否则只要环境变量CSCOPE_DB不为空，则添加其指定的数据库到vim
        "    cs add $CSCOPE_DB
    endif
    set csverb
endif

nmap css :cs find s <C-R>=expand("<cword>")<CR><CR> 	"查找C语言符号，即查找函数名、宏、枚举值等出现的地方
nmap csg :cs find g <C-R>=expand("<cword>")<CR><CR>	"查找函数、宏、枚举等定义的位置，类似ctags所提供的功能
nmap csc :cs find c <C-R>=expand("<cword>")<CR><CR>	"查找本函数调用的函数
nmap cst :cs find t <C-R>=expand("<cword>")<CR><CR>	"查找调用本函数的函数
nmap cse :cs find e <C-R>=expand("<cword>")<CR><CR>	"查找指定的字符串
nmap csf :cs find f <C-R>=expand("<cfile>")<CR><CR>	"查找egrep模式，相当于egrep功能，但查找速度快多了
nmap csi :cs find i <C-R>=expand("<cfile>")<CR>$<CR>	"查找并打开文件，类似vim的find功能
nmap csd :cs find d <C-R>=expand("<cword>")<CR><CR>	"查找包含本文件的文
